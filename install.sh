#!/usr/bin/env bash

set -euo pipefail

log() {
  echo "[$(date +'%Y-%m-%d %H:%M:%S')] [$1] $2"
}

log "INFO" "üöÄ –°—Ç–∞—Ä—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Supabase –Ω–∞ –≤–∞—à —Å–µ—Ä–≤–µ—Ä"

### 1. –ó–∞–ø—Ä–æ—Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
read -p "–í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä: supabase.example.com): " DOMAIN
read -p "–í–≤–µ–¥–∏—Ç–µ email –¥–ª—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: " EMAIL
read -p "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –¥–ª—è Supabase Studio: " DASHBOARD_USERNAME
read -s -p "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è Supabase Studio –∏ nginx Basic Auth: " DASHBOARD_PASSWORD
echo ""
read -p "–í–≤–µ–¥–∏—Ç–µ Telegram Bot Token: " TG_BOT_TOKEN
read -p "–í–≤–µ–¥–∏—Ç–µ Telegram User ID –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: " TG_USER_ID

### 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker, –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if ! command -v docker &> /dev/null; then
  log "INFO" "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
  apt update
  apt install -y \
    ca-certificates \
    curl \
    gnupg \
    lsb-release
  install -m 0755 -d /etc/apt/keyrings
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  echo \ 
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \ 
    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
    tee /etc/apt/sources.list.d/docker.list > /dev/null
  apt update
  apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
else
  log "INFO" "‚úÖ Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

### 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
if ! docker compose version &> /dev/null; then
  log "ERROR" "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
  exit 1
fi

log "INFO" "üîê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–π..."
POSTGRES_PASSWORD=$(openssl rand -hex 16)
JWT_SECRET=$(openssl rand -hex 32)
ANON_KEY=$(openssl rand -hex 32)
SERVICE_ROLE_KEY=$(openssl rand -hex 32)
KONG_PASSWORD=$(openssl rand -hex 20)
SITE_URL="https://$DOMAIN"

### 4. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
mkdir -p /opt/supabase /opt/supabase-project
cd /opt/supabase

### 5. –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã—Ö –ø–∞–ø–æ–∫ Supabase
if [ ! -d ".git" ]; then
  log "INFO" "‚¨áÔ∏è –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Supabase (sparse)..."
  git init
  git remote add origin https://github.com/supabase/supabase.git
  git config core.sparseCheckout true
  echo "docker" >> .git/info/sparse-checkout
  git pull origin master
else
  log "INFO" "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω"
fi

### 6. –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ docker-—Å–±–æ—Ä–∫–∏
cp -r docker /opt/supabase-project/
cd /opt/supabase-project

### 7. –°–æ–∑–¥–∞–Ω–∏–µ .env
cat <<EOF > .env
# === USER CONFIG ===
PROJECT_DOMAIN=$DOMAIN
SITE_URL=$SITE_URL
DASHBOARD_USERNAME=$DASHBOARD_USERNAME
DASHBOARD_PASSWORD=$DASHBOARD_PASSWORD
TG_BOT_TOKEN=$TG_BOT_TOKEN
TG_USER_ID=$TG_USER_ID

# === DATABASE ===
POSTGRES_PASSWORD=$POSTGRES_PASSWORD

# === JWT ===
JWT_SECRET=$JWT_SECRET
ANON_KEY=$ANON_KEY
SERVICE_ROLE_KEY=$SERVICE_ROLE_KEY

# === KONG ===
KONG_PASSWORD=$KONG_PASSWORD

# === SMTP ===
SMTP_ADMIN_EMAIL=
SMTP_HOST=
SMTP_PORT=
SMTP_USERNAME=
SMTP_PASSWORD=
SMTP_SENDER_NAME=
SMTP_SENDER_EMAIL=

EOF

log "INFO" "üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ docker-–æ–±—Ä–∞–∑–æ–≤ –∏ –∑–∞–ø—É—Å–∫ Supabase..."
docker compose -f docker/docker-compose.yml --env-file .env up -d

log "INFO" "‚úÖ Supabase —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω. –ü–∞–Ω–µ–ª—å: https://$DOMAIN"
log "INFO" "üîê –ü–∞—Ä–æ–ª—å Supabase Studio: $DASHBOARD_PASSWORD"
log "INFO" "üì¨ –î–æ–±–∞–≤—å SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏"
log "INFO" "üëÆ –ó–∞—â–∏—Ç–∞ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç—Å—è Kong: –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ –ø–∞—Ä–æ–ª—é –∏ –±–µ–∑ –¥–æ—Å—Ç—É–ø–∞ –ø–æ IP –∫ PostgreSQL"

exit 0
