#!/usr/bin/bash

set -e

# üîπ –í–≤–æ–¥ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
echo "üîπ –í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä: supabase.example.com):"
read DOMAIN

echo "üîπ –í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –¥–ª—è Supabase Studio:"
read -p "–õ–æ–≥–∏–Ω: " DASHBOARD_USERNAME
read -s -p "–ü–∞—Ä–æ–ª—å: " DASHBOARD_PASSWORD
echo -e "\nüîê –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–µ–∫—Ä–µ—Ç—ã..."

POSTGRES_PASSWORD=$(openssl rand -hex 16)
SUPABASE_DB_PASSWORD=$(openssl rand -hex 16)
JWT_SECRET=$(openssl rand -hex 32)
ANON_KEY=$(openssl rand -hex 32)
SERVICE_ROLE_KEY=$(openssl rand -hex 32)
S3_ACCESS_KEY=$(openssl rand -hex 16)
S3_SECRET_KEY=$(openssl rand -hex 32)
S3_REGION=local

SITE_URL=https://$DOMAIN

# üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∏ Docker Compose
apt update && apt upgrade -y
apt install -y curl git
curl -fsSL https://get.docker.com -o get-docker.sh && sh get-docker.sh
apt install -y docker-compose-plugin

# üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Ç–∏–ª–∏—Ç
apt install -y ca-certificates gnupg2 lsb-release software-properties-common nginx certbot python3-certbot-nginx apache2-utils

# üõ† –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ Supabase
mkdir -p /opt/supabase && cd /opt/supabase
git clone https://github.com/supabase/supabase.git --depth=1
cp -r supabase/docker .

# üîê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º basic auth
htpasswd -cb /etc/nginx/.htpasswd "$DASHBOARD_USERNAME" "$DASHBOARD_PASSWORD"

# üìù –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ .env
cat <<EOF > .env
SUPABASE_DB_PASSWORD=$SUPABASE_DB_PASSWORD
POSTGRES_PASSWORD=$POSTGRES_PASSWORD
JWT_SECRET=$JWT_SECRET
ANON_KEY=$ANON_KEY
SERVICE_ROLE_KEY=$SERVICE_ROLE_KEY
DASHBOARD_USERNAME=$DASHBOARD_USERNAME
DASHBOARD_PASSWORD=$DASHBOARD_PASSWORD
SITE_URL=$SITE_URL
DOMAIN=$DOMAIN
S3_ACCESS_KEY=$S3_ACCESS_KEY
S3_SECRET_KEY=$S3_SECRET_KEY
S3_REGION=$S3_REGION
EOF

# üõ† –§–∏–∫—Å docker.sock, –µ—Å–ª–∏ –Ω—É–∂–µ–Ω
sed -i 's|:/var/run/docker.sock:ro,z|/var/run/docker.sock:/var/run/docker.sock:ro,z|g' docker/docker-compose.yml

cp docker/docker-compose.yml .

# üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ nginx
cat <<EOF > /etc/nginx/sites-available/supabase
server {
    listen 80;
    server_name $DOMAIN;

    location / {
        auth_basic "Restricted";
        auth_basic_user_file /etc/nginx/.htpasswd;
        proxy_pass http://localhost:54323;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
    }
}
EOF

ln -sf /etc/nginx/sites-available/supabase /etc/nginx/sites-enabled/supabase
nginx -t && systemctl reload nginx

# üîí SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
certbot --nginx -d "$DOMAIN"

# üöÄ –ó–∞–ø—É—Å–∫ Supabase
cd /opt/supabase
docker compose --env-file .env up -d

# üìã –§–∏–Ω–∞–ª—å–Ω—ã–π –≤—ã–≤–æ–¥
clear
echo -e "\n‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ù–∏–∂–µ –≤–∞–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:"
echo "----------------------------------------"
echo "Studio URL:         $SITE_URL"
echo "API URL:            $SITE_URL"
echo "DB:                 postgres://postgres:$POSTGRES_PASSWORD@localhost:5432/postgres"
echo "JWT_SECRET:         $JWT_SECRET"
echo "anon key:           $ANON_KEY"
echo "service_role key:   $SERVICE_ROLE_KEY"
echo "Studio login:       $DASHBOARD_USERNAME"
echo "Studio password:    $DASHBOARD_PASSWORD"
echo "S3 Access Key:      $S3_ACCESS_KEY"
echo "S3 Secret Key:      $S3_SECRET_KEY"
echo "S3 Region:          $S3_REGION"
echo "–î–æ–º–µ–Ω:              $DOMAIN"
echo "----------------------------------------"
echo -e "\nüí° –≠—Ç–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è —Ç–µ–±–µ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ n8n –∏ –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤."
