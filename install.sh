#!/usr/bin/env bash
set -euo pipefail

log() {
  echo "[$(date +'%Y-%m-%d %H:%M:%S')] [$1] $2"
}

if [[ $EUID -ne 0 ]]; then
  log "ERROR" "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –æ—Ç root"
  exit 1
fi

log "INFO" "üöÄ –°—Ç–∞—Ä—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Supabase..."

#
# 0) –ß–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —É—Å—Ç–∞–Ω–æ–≤–æ–∫
#
rm -rf /opt/supabase /opt/supabase-project

#
# 1) –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#
read -p "–î–æ–º–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä: supabase.example.com): " DOMAIN
read -p "Email –¥–ª—è SSL –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: " EMAIL
read -p "–õ–æ–≥–∏–Ω –¥–ª—è Supabase Studio: " DASHBOARD_USERNAME
read -s -p "–ü–∞—Ä–æ–ª—å –¥–ª—è Studio –∏ nginx Basic Auth: " DASHBOARD_PASSWORD
echo ""
SITE_URL="https://${DOMAIN}"

#
# 2) –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–æ–≤
#
log "INFO" "üîë –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–æ–≤..."
POSTGRES_PASSWORD=$(openssl rand -hex 16)
ANON_KEY=$(openssl rand -hex 32)
SERVICE_ROLE_KEY=$(openssl rand -hex 32)
JWT_SECRET=$(openssl rand -hex 32)

#
# 3) –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
#
log "INFO" "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤..."
apt update
apt install -y \
  ca-certificates curl gnupg lsb-release \
  git jq htop net-tools ufw unzip \
  nginx apache2-utils certbot python3-certbot-nginx openssl

#
# 4) –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Engine –∏ Compose-–ø–ª–∞–≥–∏–Ω–∞
#
log "INFO" "üê≥ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
install -m0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg \
  | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
chmod a+r /etc/apt/keyrings/docker.gpg
ARCH=$(dpkg --print-architecture)
RELEASE=$(. /etc/os-release && echo "$VERSION_CODENAME")
echo "deb [arch=${ARCH} signed-by=/etc/apt/keyrings/docker.gpg] \
  https://download.docker.com/linux/ubuntu ${RELEASE} stable" \
  | tee /etc/apt/sources.list.d/docker.list > /dev/null
apt update
apt install -y docker-ce docker-ce-cli containerd.io \
               docker-buildx-plugin docker-compose-plugin
systemctl enable --now docker

#
# 5) –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞
#
log "INFO" "üõ°Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UFW..."
ufw allow OpenSSH
ufw allow 80
ufw allow 443
ufw --force enable

#
# 6) –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
#
log "INFO" "üìÅ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p /opt/supabase /opt/supabase-project

#
# 7) –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ–º Nginx + Basic Auth, –ø—Ä–æ–∫—Å–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ Kong (–ø–æ—Ä—Ç 8000)
#
log "INFO" "üíª –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx –∏ Basic Auth..."
htpasswd -bc /etc/nginx/.htpasswd "$DASHBOARD_USERNAME" "$DASHBOARD_PASSWORD"

cat <<'NGINX' >/etc/nginx/sites-available/supabase
server {
  listen 80;
  server_name DOMAIN_PLACEHOLDER;

  location / {
    auth_basic "Restricted";
    auth_basic_user_file /etc/nginx/.htpasswd;

    # –ø—Ä–æ–∫—Å–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ Kong –Ω–∞ –ø–æ—Ä—Ç 8000
    proxy_pass http://localhost:8000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # –ø–µ—Ä–µ–¥–∞—ë–º ANON_KEY –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ Kong
    proxy_set_header Authorization "Bearer ANON_KEY_PLACEHOLDER";
  }
}
NGINX

# –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
sed -i "s|DOMAIN_PLACEHOLDER|${DOMAIN}|g" /etc/nginx/sites-available/supabase
sed -i "s|ANON_KEY_PLACEHOLDER|${ANON_KEY}|g" /etc/nginx/sites-available/supabase

ln -sf /etc/nginx/sites-available/supabase /etc/nginx/sites-enabled/supabase
nginx -t && systemctl reload nginx

#
# 8) –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ (staging)
#
log "INFO" "üîí –ó–∞–ø—Ä–æ—Å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ SSL (staging)..."
certbot --nginx -d "$DOMAIN" -m "$EMAIL" --agree-tos -n --staging

#
# 9) –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ Supabase –∏ sparse-checkout docker
#
log "INFO" "‚¨áÔ∏è –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ Supabase..."
git clone --depth 1 --filter=blob:none --sparse \
  https://github.com/supabase/supabase.git /opt/supabase
cd /opt/supabase
git sparse-checkout init --cone
git sparse-checkout set docker

#
# 10) –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ Docker-–º–∞–Ω–∏—Ñ–µ—Å—Ç–æ–≤
#
log "INFO" "üìÑ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ Docker-–º–∞–Ω–∏—Ñ–µ—Å—Ç–æ–≤..."
cp -r docker/* /opt/supabase-project/

#
# 11) –ì–µ–Ω–µ—Ä–∞—Ü–∏—è .env –∏–∑ —à–∞–±–ª–æ–Ω–∞
#
log "INFO" "‚úçÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ .env..."
cd /opt/supabase-project
cp ../supabase/docker/.env.example .env

# –∑–∞–ø–æ–ª–Ω—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –ø–æ–ª—è
sed -i "s|^#\?POSTGRES_PASSWORD=.*|POSTGRES_PASSWORD=${POSTGRES_PASSWORD}|g" .env
sed -i "s|^#\?ANON_KEY=.*|ANON_KEY=${ANON_KEY}|g" .env
sed -i "s|^#\?SERVICE_ROLE_KEY=.*|SERVICE_ROLE_KEY=${SERVICE_ROLE_KEY}|g" .env
sed -i "s|^#\?JWT_SECRET=.*|JWT_SECRET=${JWT_SECRET}|g" .env
sed -i "s|^#\?SITE_URL=.*|SITE_URL=${SITE_URL}|g" .env
sed -i "s|^#\?SUPABASE_PUBLIC_URL=.*|SUPABASE_PUBLIC_URL=${SITE_URL}|g" .env
sed -i "s|^#\?DASHBOARD_USERNAME=.*|DASHBOARD_USERNAME=${DASHBOARD_USERNAME}|g" .env
sed -i "s|^#\?DASHBOARD_PASSWORD=.*|DASHBOARD_PASSWORD=${DASHBOARD_PASSWORD}|g" .env
sed -i "s|^#\?SMTP_ADMIN_EMAIL=.*|SMTP_ADMIN_EMAIL=${EMAIL}|g" .env

# –æ—Å—Ç–∞–≤–ª—è–µ–º –ø—É—Å—Ç—ã–µ —Ç–æ–∫–µ–Ω—ã Logflare, —á—Ç–æ–±—ã Vector –Ω–µ –ø–∞–¥–∞–ª
sed -i "s|^#\?LOGFLARE_PUBLIC_ACCESS_TOKEN=.*|LOGFLARE_PUBLIC_ACCESS_TOKEN=\"\"|g" .env
sed -i "s|^#\?LOGFLARE_PRIVATE_ACCESS_TOKEN=.*|LOGFLARE_PRIVATE_ACCESS_TOKEN=\"\"|g" .env

#
# 12) –ó–∞–ø—É—Å–∫ Supabase
#
log "INFO" "üê≥ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ Supabase..."
docker compose pull
docker compose up -d --remove-orphans

log "INFO" "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û—Ç–∫—Ä–æ–π—Ç–µ ${SITE_URL}"
