#!/usr/bin/env bash
set -euo pipefail

log() { echo "[$(date +'%Y-%m-%d %H:%M:%S')] [$1] $2"; }
if [[ $EUID -ne 0 ]]; then log "ERROR" "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ—Ç root"; exit 1; fi

log "INFO" "üöÄ –°—Ç–∞—Ä—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Supabase..."

# 0) –û—á–∏—Å—Ç–∫–∞
rm -rf /opt/supabase /opt/supabase-project

# 1) –í–≤–æ–¥
read -p "–î–æ–º–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä: supabase.example.com): " DOMAIN
read -p "Email –¥–ª—è SSL –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: " EMAIL
read -p "–õ–æ–≥–∏–Ω –¥–ª—è Studio: " DASHBOARD_USERNAME
read -s -p "–ü–∞—Ä–æ–ª—å –¥–ª—è Studio/BasicAuth: " DASHBOARD_PASSWORD
echo ""
SITE_URL="https://${DOMAIN}"

# 2) –ö–ª—é—á–∏
log "INFO" "üîë –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª—é—á–∏..."
POSTGRES_PASSWORD=$(openssl rand -hex 16)
ANON_KEY=$(openssl rand -hex 32)
SERVICE_ROLE_KEY=$(openssl rand -hex 32)
JWT_SECRET=$(openssl rand -hex 32)

# 3) –ü–∞–∫–µ—Ç—ã
log "INFO" "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–∫–µ—Ç—ã..."
apt update
apt install -y ca-certificates curl gnupg lsb-release \
  git jq htop net-tools ufw unzip \
  nginx apache2-utils certbot python3-certbot-nginx openssl

# 4) Docker
log "INFO" "üê≥ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Engine –∏ Compose..."
install -m0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg \
  | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
chmod a+r /etc/apt/keyrings/docker.gpg
ARCH=$(dpkg --print-architecture)
RELEASE=$(. /etc/os-release && echo "$VERSION_CODENAME")
echo "deb [arch=$ARCH signed-by=/etc/apt/keyrings/docker.gpg] \
  https://download.docker.com/linux/ubuntu $RELEASE stable" \
  | tee /etc/apt/sources.list.d/docker.list > /dev/null
apt update
apt install -y docker-ce docker-ce-cli containerd.io \
               docker-buildx-plugin docker-compose-plugin
systemctl enable --now docker

# 5) UFW
log "INFO" "üõ° –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º UFW..."
ufw allow OpenSSH
ufw allow 80
ufw allow 443
ufw --force enable

# 6) –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
log "INFO" "üìÅ –ì–æ—Ç–æ–≤–∏–º –∫–∞—Ç–∞–ª–æ–≥–∏..."
mkdir -p /opt/supabase /opt/supabase-project

# 7) Nginx + Basic Auth –ø—Ä–æ–∫—Å–∏ –Ω–∞ Studio:3000
log "INFO" "üíª –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ–º Nginx –∏ Basic Auth..."
htpasswd -bc /etc/nginx/.htpasswd "$DASHBOARD_USERNAME" "$DASHBOARD_PASSWORD"
cat <<'NGINX' >/etc/nginx/sites-available/supabase
server {
  listen 80;
  server_name DOMAIN_PLACEHOLDER;

  location / {
    auth_basic "Restricted";
    auth_basic_user_file /etc/nginx/.htpasswd;

    proxy_pass http://localhost:3000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}
NGINX
sed -i "s|DOMAIN_PLACEHOLDER|${DOMAIN}|g" /etc/nginx/sites-available/supabase
ln -sf /etc/nginx/sites-available/supabase /etc/nginx/sites-enabled/supabase
nginx -t && systemctl reload nginx

# 8) SSL (staging)
log "INFO" "üîí –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç..."
certbot --nginx -d "$DOMAIN" -m "$EMAIL" --agree-tos -n --staging

# 9) –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ Supabase
log "INFO" "‚¨áÔ∏è –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ Supabase repo..."
git clone --depth 1 --filter=blob:none --sparse \
  https://github.com/supabase/supabase.git /opt/supabase
cd /opt/supabase
git sparse-checkout init --cone
git sparse-checkout set docker

# 10) –ö–æ–ø–∏—Ä—É–µ–º Docker-–º–∞–Ω–∏—Ñ–µ—Å—Ç—ã –∏ –ø—Ä–∞–≤–∏–º vector
log "INFO" "üìÑ –ö–æ–ø–∏—Ä—É–µ–º Docker-–º–∞–Ω–∏—Ñ–µ—Å—Ç—ã..."
cp -r docker/* /opt/supabase-project/

log "INFO" "üîß –û—Ç–∫–ª—é—á–∞–µ–º logflare-sink –≤ Vector..."
if [[ -f /opt/supabase-project/vector/vector.yml ]]; then
  sed -i '/^\[sinks\.logflare_auth\]/,/^\[/{ s/^/#/ }' /opt/supabase-project/vector/vector.yml
fi

# 10.1) –ú–∞–ø–ø–∏–º –ø–æ—Ä—Ç Studio:3000
cat <<EOF >/opt/supabase-project/docker-compose.override.yml
version: "3.9"
services:
  studio:
    ports:
      - "3000:3000"
EOF

# 11) –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º .env
log "INFO" "‚úçÔ∏è –°–æ–∑–¥–∞—ë–º .env –∏–∑ —à–∞–±–ª–æ–Ω–∞..."
cd /opt/supabase-project
cp ../supabase/docker/.env.example .env
sed -i "s|^#\?POSTGRES_PASSWORD=.*|POSTGRES_PASSWORD=${POSTGRES_PASSWORD}|g" .env
sed -i "s|^#\?ANON_KEY=.*|ANON_KEY=${ANON_KEY}|g" .env
sed -i "s|^#\?SERVICE_ROLE_KEY=.*|SERVICE_ROLE_KEY=${SERVICE_ROLE_KEY}|g" .env
sed -i "s|^#\?JWT_SECRET=.*|JWT_SECRET=${JWT_SECRET}|g" .env
sed -i "s|^#\?SITE_URL=.*|SITE_URL=${SITE_URL}|g" .env
sed -i "s|^#\?SUPABASE_PUBLIC_URL=.*|SUPABASE_PUBLIC_URL=${SITE_URL}|g" .env
sed -i "s|^#\?DASHBOARD_USERNAME=.*|DASHBOARD_USERNAME=${DASHBOARD_USERNAME}|g" .env
sed -i "s|^#\?DASHBOARD_PASSWORD=.*|DASHBOARD_PASSWORD=${DASHBOARD_PASSWORD}|g" .env
sed -i "s|^#\?SMTP_ADMIN_EMAIL=.*|SMTP_ADMIN_EMAIL=${EMAIL}|g" .env

# 12) –ó–∞–ø—É—Å–∫ —Å—Ç–µ–∫–∞
log "INFO" "üê≥ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ Supabase..."
docker compose pull
docker compose up -d --remove-orphans

log "INFO" "‚úÖ –ì–æ—Ç–æ–≤–æ! –û—Ç–∫—Ä–æ–π—Ç–µ ${SITE_URL}"
